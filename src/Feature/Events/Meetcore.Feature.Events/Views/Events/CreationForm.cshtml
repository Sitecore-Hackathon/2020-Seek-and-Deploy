@model Meetcore.Feature.Events.Model.EventViewModel

<section class="section">
    <div class="container main-container">
        @using (Html.BeginRouteForm(Sitecore.Mvc.Configuration.MvcSettings.SitecoreRouteName, FormMethod.Post, new { @class = "my-2 my-lg-0" }))
        {
            @Html.Sitecore().FormHandler("Events", "SaveEvent")
            <div class="row">
                @Html.TextBoxFor(m => m.Name, new { placeholder = "Event Name", @class = "form-control" })
            </div>
            <div class="row">
                @Html.TextBoxFor(m => m.Description, new { placeholder = "Event Description", @class = "form-control" })
            </div>
            <div class="row">
                @Html.TextBoxFor(m => m.Capacity, new { placeholder = "Event Capacity", @class = "form-control" })
            </div>
            <div class="row">
                @Html.TextBoxFor(m => m.Cost, new { placeholder = "Event Cost", @class = "form-control" })
            </div>
            <div class="row">
                @Html.EditorFor(m => m.DateAndTime, new { placeholder = "Event Date And Time", @class = "form-control date-picker" })
            </div>
            <div class="row form-inline">
                <br />
                @Html.Label("Is a public Event?  ")
                @Html.CheckBoxFor(m => m.IsPublic, new { placeholder = "Event Description", @class = "form-control" })
            </div>
            <div class="row">
                <div id="mapid" style="width: 600px; height: 400px;"></div>
            </div>
            @Html.HiddenFor(m => m.Latitude, new { @id = "hidLatitude" })
            @Html.HiddenFor(m => m.Longitude, new { @id = "hidLongitude" })
            <div class="row">
                <button class="btn btn-primary my-2 my-sm-0" type="submit">Save</button>
            </div>
        }
    </div>
</section>

<script>

    var mymap = L.map('mapid').setView([33.78, -118.20], 7);
    var latlng = "";

    L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {
        maxZoom: 18,
        id: 'mapbox/streets-v11',
        tileSize: 512,
        zoomOffset: -1
    }).addTo(mymap);


    var popup = L.popup();

    function onMapClick(e) {
        latlng = e.latlng;
        popup
            .setLatLng(e.latlng)
            .setContent(e.latlng.toString())
            .openOn(mymap);
        document.getElementById('hidLatitude').value = e.latlng.lat;
        document.getElementById('hidLongitude').value = e.latlng.lng;
    }

    mymap.on('click', onMapClick);

</script>